--- crash-8.0.6/kaslr_helper.c.orig	2024-12-21 10:58:09.189999980 +0100
+++ crash-8.0.6/kaslr_helper.c	2024-12-21 11:07:16.553333377 +0100
@@ -23,7 +23,8 @@
 #include <elf.h>
 #include <inttypes.h>
 
-#ifdef X86_64
+#if defined(X86_64) && defined(__LP64__)
+
 /*
  * Get address of vector0 interrupt handler (Devide Error) from Interrupt
  * Descriptor Table.
--- crash-7.1.3/unwind_x86_64.h.orig	2015-09-02 21:38:32.000000000 +0200
+++ crash-7.1.3/unwind_x86_64.h	2015-10-24 14:57:49.632888183 +0200
@@ -10,10 +10,14 @@
  * GNU General Public License for more details.
  */
 
+#ifdef __LP64__
 #define CONFIG_64BIT 1
+typedef unsigned long size_t;
+#else
+typedef unsigned int size_t;
+#endif
 #define NULL ((void *)0)
 
-typedef unsigned long size_t;
 typedef unsigned char u8;
 typedef signed short s16;
 typedef unsigned short u16;
@@ -22,30 +26,30 @@
 typedef unsigned long long u64;
 
 struct pt_regs {
-        unsigned long r15;
-        unsigned long r14;
-        unsigned long r13;
-        unsigned long r12;
-        unsigned long rbp;
-        unsigned long rbx;
+        u64 r15;
+        u64 r14;
+        u64 r13;
+        u64 r12;
+        u64 rbp;
+        u64 rbx;
 /* arguments: non interrupts/non tracing syscalls only save upto here*/
-        unsigned long r11;
-        unsigned long r10;
-        unsigned long r9;
-        unsigned long r8;
-        unsigned long rax;
-        unsigned long rcx;
-        unsigned long rdx;
-        unsigned long rsi;
-        unsigned long rdi;
-        unsigned long orig_rax;
+        u64 r11;
+        u64 r10;
+        u64 r9;
+        u64 r8;
+        u64 rax;
+        u64 rcx;
+        u64 rdx;
+        u64 rsi;
+        u64 rdi;
+        u64 orig_rax;
 /* end of arguments */
 /* cpu exception frame or undefined */
-        unsigned long rip;
-        unsigned long cs;
-        unsigned long eflags;
-        unsigned long rsp;
-        unsigned long ss;
+        u64 rip;
+        u64 cs;
+        u64 eflags;
+        u64 rsp;
+        u64 ss;
 /* top of stack page */
 };
 
